/*병합정렬이란?
: 배열을 앞부분과 뒷부분으로 나누어 각각 정렬한 다음 병합하는 작업을 반복하여 정렬을 수행하는 알고리즘이다.
각 배열에서 선택한 요소들의 값들을 비교하여 작은 값의 요소를 꺼내 새로운 배열에 넣는 작업을 반복한다.
*/

#include <stdio.h>
#include <stdlib.h>

void merge(const int a[], int na, const int b[], int nb, int c[]){
	int pa,pb,pc=0; //커서 선언
	
	while(pa < na && pb < nb)
		c[pc++]=(a[pa] <= b[pb]) ? a[pa++] : b[pb++]; //새로운 배열c에 a배열과 b배열에서 선택된 요소들의 값을 비교하여 작은 값의 요소를 삽입, 선택되지 않은 배열과 배열c의 커서 1 증가.
	
	
	while(pa<na)
		c[pc++]=a[pa++];
	
	while(pb<nb)
		c[pc++]=b[pb++]; //어느 한쪽 배열의 커서가 끝에 다다른다면 병합이 종료되는데, 다른 배열에 아직 복사되지 못한 요소가 남아있는 상태일 때 이를 해결하기 위한 조건문.
}
		   
int main(void){
	int na,nb;
	int *a,*b,*c;
	
	printf("a의 요소 개수: "); scanf("%d",&na);
	printf("b의 요소 개수: "); scanf("%d",&nb);
	
	a=malloc(sizeof(int)*na);
	b=malloc(sizeof(int)*nb);
	c=malloc(sizeof(int)*(na+nb));
	
	printf("a[0] : ");
	scanf("%d",&a[0]);
	for(int i=1;i<na;i++){
		do{
			printf("a[%d] : ",i);
			scanf("%d",&a[i]);
		}while(a[i]<a[i-1]);
	}
	
	printf("b[0] : ");
	scanf("%d",&b[0]);
	for(int i=1;i<nb;i++){
		do{
			printf("b[%d] : ",i);
			scanf("%d",&b[i]);
		}while(b[i]<b[i-1]);
	}
	
	merge(a,na,b,nb,c);
	
	printf("배열 a와 b를 병합하여 배열 c에 저장했습니다.\n");
	for(int i=0;i<na+nb;i++)
		printf("c[%2d] = %2d\n",i,c[i]);
	
	free(a); free(b); free(c);
	
	return 0;
}
