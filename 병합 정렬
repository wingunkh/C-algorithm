/*병합정렬이란?
: 배열을 앞부분과 뒷부분으로 나누어 각각 정렬한 다음 병합하는 작업을 반복하여 정렬을 수행하는 알고리즘이다.
각 배열에서 선택한 요소들의 값들을 비교하여 작은 값의 요소를 꺼내 새로운 배열에 넣는 작업을 반복한다.
*/

#include <stdio.h>
#include <stdlib.h>

static int *buff; //전역변수이자 병합결과를 일시적으로 저장할 작업용 배열인 buff

static void __mergesort(int a[], int left, int right){
	if(left < right){
		int center=(left+right)/2;
		int i=0;
		int p=0;
		int j=0;
		int k=left;
		
		__mergesort(a,left,center); //앞부분에 대한 병합정렬
		__mergesort(a,center+1,right); //뒷부분에 대한 병합정렬
		
		for(i=left;i<=center;i++) //a배열의 앞부분을 buff배열로 복사
			buff[p++]=a[i]; 
		
		while(i<=right && j<p) //a배열의 뒷부분과 buff배열에 복사된 a배열의 앞부분을 병합한 결과를 a배열에 저장 
			a[k++]=(buff[j]<=a[i]) ? buff[j++] : a[i++]; //두 배열의 요소 중 더 작은 요소를 a배열에 복사 및 커서 증가
		
		while(j<p) //buff배열에 남아있는 요소를 a배열에 복사
			a[k++]=buff[j++];
	}	
}

int mergesort(int a[], int n){
	if((buff=malloc(sizeof(int)*n))==NULL) //buff배열 생성
		return -1;
	__mergesort(a,0,n-1); //배열 전체를 병합정렬
	free(buff);
	return 0;
}

int main(void){
	int nx;
	int *x;
	printf("병합 정렬\n");
	printf("요소 개수: ");
	scanf("%d",&nx);
	x=malloc(sizeof(int)*nx);
	
	for(int i=0;i<nx;i++){
		printf("x[%d] : ",i);
		scanf("%d",&x[i]);
	}
	
	mergesort(x,nx);
	
	printf("오름차순으로 정렬했습니다.\n");
	for(int i=0;i<nx;i++)
		printf("x[%d] = %d\n",i,x[i]);
	free(x);
	
	return 0;
}
