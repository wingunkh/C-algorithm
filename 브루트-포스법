/*브루트-포스법이란?
: 문자열에서 문자열을 검색하는 알고리즘이다.
문자열 원본을 패턴, 검색할 문자열을 텍스트라고 부른다.
선형 검색을 확장한 알고리즘이므로 단순법, 소박법이라고도 부른다.
이미 검사를 진행한 위치를 기억하지 못하므로 효율은 좋지 못하다고 할 수 있다.
위의 단점을 보완한 KMP법과 이 둘보다 우수한 Boyer-Moore법이 있다.
*/

#include <stdio.h>

int bf_match(const char txt[], const char pat[]){
	int pt=0; //텍스트 커서
	int pp=0; //패턴 커서
	while(txt[pt]!='\0' && pat[pp]!='\0'){//텍스트커서가 마지막에 도달한다면(일치하는 패턴이 없다면) 또는 패턴커서가 마지막에 도달한다면(일치하는 패턴이 존재한다면) 반복 종료
		if(txt[pt]==pat[pp]){ //텍스트와 패턴이 같다면 다음 텍스트와 패턴을 검사
			pt++;
			pp++;
		}
		else{//텍스트와 패턴이 다르다면 텍스트커서는 다음으로, 패턴커서는 0으로 초기화
			pt=pt-pp+1;
			pp=0;
		}
	}
	if(pat[pp]=='\0')//패턴커서가 마지막에 도달했다면(=텍스트와 패턴이 일치하다면), pt-pp를 통해 텍스트에서 몇번째 문자부터 일치하는지 리턴
		return pt-pp;
	return -1; //일치하는 패턴이 없다면 -1리턴
}

int main(void){
	int idx;
	char s1[256];
	char s2[256];
	printf("브루트-포스법\n");
	printf("텍스트 : ");
	scanf("%s",s1);
	printf("패턴 : ");
	scanf("%s",s2);
	idx=bf_match(s1,s2);
	
	if(idx==-1)
		printf("텍스트에 패턴이 없습니다.\n");
	else
		printf("%d번째 문자부터 match합니다.\n",idx+1);
	
	return 0;
}
