/*퀵 정렬이란?
: 일반적으로 사용되고 있는 아주 빠른 정렬 알고리즘.
먼저 한 기준을 선택하고 그 기준보다 작은 그룹과 큰 그룹으로 나눈다.
이때 이 기준을 피벗(pivot)이라고 한다.
퀵 정렬은 이렇게 각 그룹에 대해 피벗설정과 그룹나눔을 반복하며 모든 그룹의 요소가 1개가 되면 정렬을 마친다.
*/

#include <stdio.h>
#include <stdlib.h>

#define swap(type,x,y) do {type t=x; x=y; y=t;} while(0)

void quick(int a[],int left, int right){
	int pl=left;
	int pr=right;
	int x=a[(pl+pr)/2];
	
	do{
		while(a[pl]<x) pl++; //a[pl]이 피벗보다 크거나 같을 때 까지 탐색.
		while(a[pr]>x) pr--; //a[pr]이 피벗보다 작거나 같을 때 까지 탐색.
		if(pl<=pr){
			swap(int,a[pl],a[pr]);
			pl++; 
			pr--;
		}
	}while(pl<=pr); //pl과 pr이 교차하면 do while문이 종료됨.
	if(left < pr) quick(a,left,pr); //요소의 개수가 1개인 그룹은 더이상 나눌 필요가 없다. 이 조건문은 요소의 개수가 2개 이상인 그룹만 나누기 위해 필요한 조건이다.
	if(right > pr) quick(a,pl,right); //추가로 퀵 정렬은 분할 정복 알고리즘이므로 재귀호출을 사용하여 구현하고 있다.
}

int main(void){
	int nx;
	int *x;
	
	printf("퀵 정렬\n");
	printf("요소 개수: ");
	scanf("%d",&nx);
	
	x=malloc(sizeof(int)*nx);
	
	for(int i=0;i<nx;i++){
		printf("x[%d]: ",i);
		scanf("%d",&x[i]);
	}
	
	quick(x,0,nx-1);
	printf("오름차순으로 정렬했습니다.\n");
	
	for(int i=0;i<nx;i++){
		printf("x[%d] = %d\n",i,x[i]);
	}
	free(x);
	
	return 0;
}
