/*쉘 정렬이란?
: 정렬을 마쳤거나 거의 마친 상태라면 정렬 속도가 빠른 단순 삽입 정렬의 장점은 살리고
삽입할 위치가 멀리 떨어져 있으면 요소 이동의 횟수가 많아지는 단점은 보완한 정렬법입니다.
실제로 퀵 정렬이 고안되기 전까지 가장 빠른 알고리즘으로 알려져 있었습니다.
*/

#include <stdio.h>
#include <stdlib.h>

void shell(int a[],int n){
	int i,j,h;
	for(h=n/2;h>0;h/=2){
		for(i=h,i<n;i++){
			int tmp=a[i];
			for(j=i-h;j>=0&&a[j]>tmp;j-=h){
				a[j+h]=a[j];
			}
			a[j+h]=tmp;
		}
	}
}

/*shell 함수를 파악해 보기 위해 [2,4,6,8,1,3,5,7]라는 배열이 있다고 생각해보자.
첫번째 for문의 조건식이 참이며 두번째 for문의 조건식 참이므로 int tmp=a[i]; 절이 실행되어 tmp=1 이다. 
세번째 for문의 조건식이 참이므로 a[j+h]=a[j]; 절이 실행되어 a[4]=a[0]; 그러므로 a[4]=2 이다.
j-=h는 j=-4이므로 조건식이 거짓이다. 세번째 for문은 종료되며 a[j+h]=tmp; 절이 실행되어 a[0]=a[4] 그러므로 a[0]=1 이다. (이하 생략...)
*/

 
